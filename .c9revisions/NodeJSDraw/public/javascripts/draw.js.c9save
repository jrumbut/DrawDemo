{"ts":1356756673587,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1356756840257,"patch":[[{"diffs":[[1,"tool.minDistance = 20;\n\nfunction onMouseDrag(event) {\n    var radius = event.delta.length / 2;\n    var circle = new Path.Circle(event.middlePoint, radius);\n    circle.fillColor = 'black';\n}"]],"start1":0,"start2":0,"length1":0,"length2":189}]],"length":189,"saved":false}
{"ts":1356756891195,"patch":[[{"diffs":[[0,"ce = 20;"],[1,"\ntool.maxDistance = 50;"],[0,"\n\nfuncti"]],"start1":14,"start2":14,"length1":16,"length2":39}]],"length":212,"saved":false}
{"ts":1356756905727,"patch":[[{"diffs":[[0,"lack';\n}"],[1,"\n\n// Returns an object specifying a semi-random color\n// The color will always have a red value of 0\n// and will be semi-transparent (the alpha value)\nfunction randomColor() {\n    \n    return {\n        red: 0,\n        green: Math.random(),\n        blue: Math.random(),\n        alpha: ( Math.random() * 0.25 ) + 0.05\n    };\n}"]],"start1":204,"start2":204,"length1":8,"length2":332}]],"length":536,"saved":false}
{"ts":1356756976207,"patch":[[{"diffs":[[0,"    };\n}"],[1,"\n\n// every time the user drags their mouse\n// this function will be executed\nfunction onMouseDrag(event) {\n    // Take the click/touch position as the centre of our circle\n    var x = event.middlePoint.x;\n    var y = event.middlePoint.y;\n    // The faster the movement, the bigger the circle\n    var radius = event.delta.length / 2;\n    // Generate our random color\n    var color = randomColor();\n    // Draw the circle \n    drawCircle( x, y, radius, color );\n    // Pass the data for this circle\n    // to a special function for later\n    emitCircle( x, y, radius, color );\n} \n \nfunction drawCircle( x, y, radius, color ) {\n    // Render the circle with Paper.js\n    var circle = new Path.Circle( new Point( x, y ), radius );\n    circle.fillColor = new RgbColor( color.red, color.green, color.blue, color.alpha );\n    // Refresh the view, so we always get an update, even if the tab is not in focus\n    view.draw();\n} \n \nfunction emitCircle( x, y, radius, color ) {\n    // We'll do something interesting with this shortly...\n}"]],"start1":528,"start2":528,"length1":8,"length2":1035}]],"length":1563,"saved":false}
